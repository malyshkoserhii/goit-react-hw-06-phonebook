{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/actions.js","redux/reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","contact","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebook","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ContactForm","nameInputId","shortid","generate","phoneNumberId","handleContactInputChange","e","currentTarget","value","setState","handleContactSubmit","preventDefault","trim","getExistedContact","alert","reset","props","onAddNewContact","contacts","find","this","className","s","phonebookTitle","form","onSubmit","htmlFor","label","labelDescription","type","input","onChange","addContactBtn","Component","connect","dispatch","ContactsList","onDeleteContact","contactsList","map","ContactsListItem","deleteBtn","onClick","protoTypes","PropTypes","array","isRequired","func","getFilteredContacts","allContacts","normalizedFilter","toLocaleLowerCase","includes","types","target","filterInputId","contactsSection","contactsTitle","findDescription","App","ContactList","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,cAAgB,8BAA8B,MAAQ,sBAAsB,gBAAkB,gCAAgC,MAAQ,wB,kBCA1MD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,KAAO,0BAA0B,MAAQ,2BAA2B,iBAAmB,sCAAsC,MAAQ,2BAA2B,cAAgB,qC,sMCE1OC,EAAaC,YACxB,oBACA,SAAiBC,EAAMC,GACrB,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAMKI,EAAgBN,YAAa,uBAC7BO,EAAeP,YAAa,sBCbnCQ,EAAQC,YAAc,IAAD,mBACxBC,GAAqB,SAACC,EAAD,OAAUR,EAAV,EAAUA,QAAV,4BAA4BQ,GAA5B,CAAmCR,OADhC,cAExBO,GAAwB,SAACC,EAAD,OAAUR,EAAV,EAAUA,QAAV,OACvBQ,EAAMC,QAAO,SAAAC,GAAO,OAAIA,EAAQT,KAAOD,QAHhB,IAMrBS,EAASH,YAAc,GAAD,eACzBC,GAAuB,SAACI,EAAD,YAAMX,YAGjBY,cAAgB,CAC7BP,QACAI,WCDII,EAAyB,CAC7BC,IAAK,OACLC,YACAC,UAAW,CAAC,WAGRC,EACJ,YAUSC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAKzDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,UAAWC,YAAelB,EAAwBmB,IAEpDf,aACAgB,UAAUC,IAGDC,EAAYC,YAAaT,G,iECxC9BU,E,4MACJ7B,MAAQ,CACNV,KAAM,GACNC,OAAQ,I,EAQVuC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,yBAA2B,SAAAC,GAAM,IAAD,EACNA,EAAEC,cAAlB9C,EADsB,EACtBA,KAAM+C,EADgB,EAChBA,MACd,EAAKC,SAAL,eACGhD,EAAO+C,K,EAIZE,oBAAsB,SAAAJ,GACpBA,EAAEK,iBADuB,MAEA,EAAKxC,MAAtBV,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,OAEd,GAA+B,KAA3B,EAAKS,MAAMV,KAAKmD,OAApB,CAKA,GAAI,EAAKC,kBAAkBpD,GAGzB,OAFAqD,MAAM,GAAD,OAAIrD,EAAJ,iCACL,EAAKsD,QAIP,GAAiC,KAA7B,EAAK5C,MAAMT,OAAOkD,OAKtB,OAAInD,GAAQC,GACV,EAAKsD,MAAMC,gBAAgBxD,EAAMC,QACjC,EAAKqD,cAFP,EAJED,MAAM,+BAXNA,MAAM,mB,EAsBVD,kBAAoB,SAAApD,GAElB,OADqB,EAAKuD,MAAlBE,SACQC,MAAK,SAAA9C,GAAO,OAAIA,EAAQZ,OAASA,M,sDAIjD2D,KAAKX,SAAS,CAAEhD,KAAM,GAAIC,OAAQ,O,+BAG1B,IAAD,EACkB0D,KAAKjD,MAAtBV,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,qCACE,oBAAI2D,UAAWC,IAAEC,eAAjB,uBACA,uBAAMF,UAAWC,IAAEE,KAAMC,SAAUL,KAAKV,oBAAxC,UACE,wBAAOgB,QAASN,KAAKnB,YAAaoB,UAAWC,IAAEK,MAA/C,UACE,sBAAMN,UAAWC,IAAEM,iBAAnB,mBACA,uBACEC,KAAK,OACLpE,KAAK,OACL+C,MAAO/C,EACPG,GAAIwD,KAAKnB,YACToB,UAAWC,IAAEQ,MACbC,SAAUX,KAAKf,8BAInB,wBAAOqB,QAASN,KAAKhB,cAAeiB,UAAWC,IAAEK,MAAjD,UACE,sBAAMN,UAAWC,IAAEM,iBAAnB,oBACA,uBACEC,KAAK,MACLpE,KAAK,SACL+C,MAAO9C,EACPE,GAAIwD,KAAKhB,cACTiB,UAAWC,IAAEQ,MACbC,SAAUX,KAAKf,8BAInB,wBAAQwB,KAAK,SAASR,UAAWC,IAAEU,cAAnC,mC,GAxFgBC,aAyGXC,eARS,SAAA/D,GAAK,MAAK,CAChC+C,SAAU/C,EAAMsB,UAAUzB,UAGD,SAAAmE,GAAQ,MAAK,CACtClB,gBAAiB,SAACxD,EAAMC,GAAP,OAAkByE,EAASjE,EAAmBT,EAAMC,QAGxDwE,CAA6ClC,G,iCC3GtDoC,EAAe,SAAC,GAAmC,IAAjClB,EAAgC,EAAhCA,SAAUmB,EAAsB,EAAtBA,gBAChC,OACE,oBAAIhB,UAAWC,IAAEgB,aAAjB,SACGpB,EAASqB,KAAI,gBAAG3E,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAa2D,UAAWC,IAAEkB,iBAA1B,UACE,oBAAGnB,UAAWC,IAAEjD,QAAhB,UACE,uBAAMgD,UAAWC,IAAE7D,KAAnB,UAA0BA,EAA1B,OACA,sBAAM4D,UAAWC,IAAE5D,OAAnB,SAA4BA,OAE9B,wBAAQ2D,UAAWC,IAAEmB,UAAWC,QAAS,kBAAML,EAAgBzE,IAA/D,sBALOA,SAcjBwE,EAAaO,WAAa,CACxBzB,SAAU0B,IAAUC,MAAMC,WAC1BT,gBAAiBO,IAAUG,MAG7B,IAAMC,EAAsB,SAACC,EAAa7E,GACxC,IAAM8E,EAAmB9E,EAAO+E,oBAEhC,OAAOF,EAAY7E,QAAO,SAAAC,GAAO,OAC/BA,EAAQZ,KAAK0F,oBAAoBC,SAASF,OAY/BhB,eARS,SAAC,GAAD,QAAGzC,UAAazB,EAAhB,EAAgBA,MAAOI,EAAvB,EAAuBA,OAAvB,MAAuC,CAC7D8C,SAAU8B,EAAoBhF,EAAOI,OAGZ,SAAA+D,GAAQ,MAAK,CACtCE,gBAAiB,SAAAzE,GAAE,OAAIuE,EAASjE,EAAsBN,QAGzCsE,CAA6CE,G,iBCJ7CF,eARS,SAAA/D,GAAK,MAAK,CAChCqC,MAAOrC,EAAMsB,UAAUrB,WAGE,SAAA+D,GAAQ,MAAK,CACtCpE,aAAc,SAAAuC,GAAC,OAAI6B,EAASkB,EAAmB/C,EAAEgD,OAAO9C,YAG3C0B,EAlCA,SAAC,GAA6B,IAA3B1B,EAA0B,EAA1BA,MAAOzC,EAAmB,EAAnBA,aACjBwF,EAAgBrD,IAAQC,WAE9B,OACE,0BAASkB,UAAWC,IAAEkC,gBAAtB,UACE,oBAAInC,UAAWC,IAAEmC,cAAjB,sBACA,wBAAO/B,QAAS6B,EAAelC,UAAWC,IAAEK,MAA5C,UACE,sBAAMN,UAAWC,IAAEoC,gBAAnB,mCACA,uBACE7B,KAAK,OACLpE,KAAK,SACL+C,MAAOA,EACP5C,GAAI2F,EACJlC,UAAWC,IAAEQ,MACbC,SAAUhE,aCNL4F,EAVH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACC,EAAD,Q,MCDNC,IAASC,OACP,cAAC,IAAD,CAAUxE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAayE,QAAS,KAAMjE,UAAWR,EAAvC,SACE,cAAC,IAAM0E,WAAP,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,U,kBCf1B7G,EAAOC,QAAU,CAAC,aAAe,kCAAkC,iBAAmB,sCAAsC,QAAU,6BAA6B,KAAO,0BAA0B,OAAS,4BAA4B,UAAY,kC","file":"static/js/main.6329ffcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsSection\":\"Filter_contactsSection__1BamL\",\"contactsTitle\":\"Filter_contactsTitle__2DY2B\",\"label\":\"Filter_label__AMhyA\",\"findDescription\":\"Filter_findDescription__chrI6\",\"input\":\"Filter_input__2A4m5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookTitle\":\"ContactForm_phonebookTitle__3pmwV\",\"form\":\"ContactForm_form__sO6Fz\",\"label\":\"ContactForm_label__2Reu8\",\"labelDescription\":\"ContactForm_labelDescription__1uXxr\",\"input\":\"ContactForm_input__S2kxU\",\"addContactBtn\":\"ContactForm_addContactBtn__2RJYI\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction(\r\n  'types/addContact',\r\n  function prepare(name, number) {\r\n    return {\r\n      payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAction('types/deleteContact');\r\nexport const changeFilter = createAction('types/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport persistReducer from 'redux-persist/es/persistReducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './reducer';\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware =\r\n  process.env.NODE_ENV === 'development'\r\n    ? [\r\n        ...getDefaultMiddleware({\r\n          serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n          },\r\n        }),\r\n        logger,\r\n      ]\r\n    : [\r\n        ...getDefaultMiddleware({\r\n          serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n          },\r\n        }),\r\n      ];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport let persistor = persistStore(store);\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport * as actions from '../../redux/actions';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onAddNewContact: PropTypes.func,\r\n    exsisted: PropTypes.func,\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  phoneNumberId = shortid.generate();\r\n\r\n  handleContactInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleContactSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    if (this.state.name.trim() === '') {\r\n      alert('Enter the name');\r\n      return;\r\n    }\r\n\r\n    if (this.getExistedContact(name)) {\r\n      alert(`${name} is alredy in contacts.`);\r\n      this.reset();\r\n      return;\r\n    }\r\n\r\n    if (this.state.number.trim() === '') {\r\n      alert('Enter the phone number');\r\n      return;\r\n    }\r\n\r\n    if (name && number) {\r\n      this.props.onAddNewContact(name, number);\r\n      this.reset();\r\n      return;\r\n    }\r\n  };\r\n\r\n  getExistedContact = name => {\r\n    const { contacts } = this.props;\r\n    return contacts.find(contact => contact.name === name);\r\n  };\r\n\r\n  reset() {\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1 className={s.phonebookTitle}>Phonebook</h1>\r\n        <form className={s.form} onSubmit={this.handleContactSubmit}>\r\n          <label htmlFor={this.nameInputId} className={s.label}>\r\n            <span className={s.labelDescription}> Name</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              id={this.nameInputId}\r\n              className={s.input}\r\n              onChange={this.handleContactInputChange}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={this.phoneNumberId} className={s.label}>\r\n            <span className={s.labelDescription}>Number</span>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              id={this.phoneNumberId}\r\n              className={s.input}\r\n              onChange={this.handleContactInputChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className={s.addContactBtn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.phonebook.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddNewContact: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.ContactsListItem}>\r\n          <p className={s.contact}>\r\n            <span className={s.name}>{name}:</span>\r\n            <span className={s.number}>{number}</span>\r\n          </p>\r\n          <button className={s.deleteBtn} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.protoTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { items, filter } }) => ({\r\n  contacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport * as types from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, changeFilter }) => {\r\n  const filterInputId = shortid.generate();\r\n\r\n  return (\r\n    <section className={s.contactsSection}>\r\n      <h2 className={s.contactsTitle}>Contacts</h2>\r\n      <label htmlFor={filterInputId} className={s.label}>\r\n        <span className={s.findDescription}>Find contact by name:</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          id={filterInputId}\r\n          className={s.input}\r\n          onChange={changeFilter}\r\n        />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.phonebook.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: e => dispatch(types.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport * as store from './redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__1ZxjG\",\"ContactsListItem\":\"ContactList_ContactsListItem__2nYUs\",\"contact\":\"ContactList_contact__2ifs9\",\"name\":\"ContactList_name__1HjaB\",\"number\":\"ContactList_number__3HsCH\",\"deleteBtn\":\"ContactList_deleteBtn__2PLWU\"};"],"sourceRoot":""}